<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonOpenFile_BKV.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="textBoxTask_BKV.Text" xml:space="preserve">
    <value>Дан файл InPutFileTask6V15.txt который может находится в любом месте на диске. Загрузить файл в textBoxIn через openFileDialog. Вывести последнее слово каждой строки в результирующею строку и вывести ее в textBoxOut.</value>
  </data>
  <metadata name="openFileDialog_BKV.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>